<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context-3.0.xsd
		   http://www.springframework.org/schema/aop
		   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		   http://www.springframework.org/schema/tx
		   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		   http://mybatis.org/schema/mybatis-spring
		   http://mybatis.org/schema/mybatis-spring.xsd
		   ">
	<!-- 加载配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:context/*.properties</value>
            </list>
        </property>
    </bean>

<!--配置数据源  属于mybatis部分-->
    <!--<bean id="dataSource" class="com.ai.channel.common.datasource.CustomHikariDataSource">-->
        <!--<constructor-arg name="dataSourceName" value="chan-sys-db"/>-->
    <!--</bean>-->
    <!-- <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="autoCommit" value="${jdbc.autoCommit}"/>
        <property name="connectionTimeout" value="${jdbc.connectionTimeout}"/>
        <property name="idleTimeout" value="${jdbc.idleTimeout}"/>
        <property name="maxLifetime" value="${jdbc.maxLifetime}"/>
        <property name="maximumPoolSize" value="${jdbc.maximumPoolSize}"/>
    </bean> -->

    <!--<bean id="seqDataSourceLoader"-->
          <!--class="com.ai.channel.common.cmpt.sequence.datasource.SeqDataSourceLoader"-->
          <!--init-method="init">-->
        <!--<property name="ds" ref="dataSource" />-->
    <!--</bean>-->
<!--配置数据源  属于mybatis部分-->
    <!-- 阿里 druid数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="url" value="${url}" />
        <property name="username" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />
        <property name="driverClassName" value="${driverClassName}" />
        <property name="filters" value="${filters}" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${maxActive}" />
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${initialSize}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${maxWait}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${minIdle}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />-->
        <!--<property name="validationQuery" value="${validationQuery}" />-->
        <!--<property name="testWhileIdle" value="${testWhileIdle}" />-->
        <!--<property name="testOnBorrow" value="${testOnBorrow}" />-->
        <!--<property name="testOnReturn" value="${testOnReturn}" />-->
        <!--<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />-->
        <!--&lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
        <!--<property name="removeAbandoned" value="${removeAbandoned}" />-->
        <!--&lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
        <!--<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />-->
        <!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
        <!--<property name="logAbandoned" value="${logAbandoned}" />-->
    </bean>

    <!-- 配置myBatis的sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <array>
                <value>classpath*:mybatis/mapper/*.xml</value>
            </array>
        </property>
        <!-- 分页拦截器 -->
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.github.pagehelper.PageInterceptor">-->
                    <!--&lt;!&ndash; 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 &ndash;&gt;-->
                    <!--<property name="properties">-->
                        <!--<value>-->
                            <!--helperDialect=oracle-->
                            <!--reasonable=true-->
                            <!--autoRuntimeDialect=true-->
                        <!--</value>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</array>-->
        <!--</property>-->
    </bean>
    <!--mapper和事物-->
    <!-- 扫描Mapper,需要添加mybatis前缀绑定 -->
    <mybatis:scan base-package="com.vic.myspring.dao.mapper" />

    <!-- 配置SqlSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- 事务配置 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--AOP 事务配置 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="synch*" propagation="REQUIRED"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 使用annotation注解方式配置事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

 <!--end 配置mapper和事物-->

    <!-- 启动注解扫描 -->
    <context:annotation-config/>
    <!-- 设定注解扫描基础包 -->
    <context:component-scan base-package="com.vic.myspring">
        <context:exclude-filter expression="org.springframework.stereotype.Controller"
                                type="annotation" />
    </context:component-scan >

</beans>